CodingLog 主要是用于记录自己每天的Coding，以帮助自己更好的在编程方面取得进步，就用中文写，暂时先不用英文，可以写成Markdown格式的。
把每天遇到的问题记录下来，感觉中文和vim很不好配合，要不用英文的吧(Try to use English, but not limited to use it only)! 另外要用GitHub托管一下，刚才就误删了上周五写的一天的日志。
Sun Sep  2 17:51:51 CST 2018
1.  


Thu Sep 13 08:58:35 CST 2018
1. mkdir -p dir1/dir2/dir3 //循环的创建目录
mkdir -p dir1/{subdir1/{subsubdir1, subsubdir2, subsubdir3}, subdir2, subdir3}	//循环的创建多个目录(包括子目录的目录)，包含子目录
2. 字符串和数字之间的转换：
- atoi
	char[]/char* ---> int
	类似的还有atol,atof
- stoi
	std::string ---> int
	类似的还有stol,stof. 逆变换有strtol,strtof
3. g++ xxx.cpp -o xxx.out -g -std=c++11	//使用c++11标准编译程序;
4. std::string
- begin()/end() return an iterator,通常用来作为循环的开头和结尾；
- back()/front(),返回串的最后一个/首个元素的位置，可以取出该元素，也可以对该位置赋值；
- pop_back()/push_back(),弹出/压入最后一个元素；
- erase(),擦除元素，减小长度；
5. gdb
- 在子函数中如何查看父函数中的变量的值
using "f numberOfFunction" to change which function you are at;
numberOfFunction can be found by using bt command;
- 基本用法：b->break/s->step/n->next/bt->backtrace/q->quit/r->run/info b/p->print/c->continue/f->frame/info local/d->delete breakpoint/
- 反向单步调试，要在g++编译的时候添加标志：-static
6. iterator溢出的判断条件: it != xxx.end();
7. The differential between ++i and i++ in for loop:
对于for循环来说，递增条件++i和i++是没有区别的，都是先执行for循环内的语句，最后再++，++i速度比i++快一点；
8. 递归的边界条件是什么？或者出口是什么？
9. 链表本质就是一个结点，一个指向下一节点的指针；
10. 工具：ctags代码解析/
逻辑错误用log，内存错误用gdb，单元测试用gtest，编译器用clang，log框架用log4cplus，性能热点用gprof，这样就没有搞不定的bug,内存错误用valgrind


Fri Sep 14 10:40:33 CST 2018

1.Learning gdb
	
	restart:					kill->run;
	see where stop:				list(l);
	modify variable:			set x = 2;
	call function:				call func();
	return from function:		finish;				//包括子函数等	
	set write watchpoint:		watch b;
	set readwatch point:	 	rwatch b;
	set write/read watchpoint:	awatch b;
	disable watchpoint:			disable no.;	

	examine stack frame:
		info frame	//查看函数栈
		info local 	//产看据不变量
		info args	//查看参数	
	set a temporary breakpoint: 	tbreak b;		//设置临时断点
	set a class member function breakpoint:		
		break TestClass::Testfunction();			//设置函数断点
	skip breakpoint:				ignore 2 5;		//忽略断点2和5

	examine memory:					x/FMT ADDRESSS	//ADDRESS可以是变量，地址,FMT是格式化符号，具体可参考help x
	see proceesor register: 		info register	
	debug with core file:			core FILENAME	//当出现了crash会给出core dump file，可以根据这个文件来debug
	see assembly code:				disassemble main	//查看main函数的汇编代码
2.How to Inspect standard container:
	Using GDB MACRO appending it to ~/.gdbinit
	reference to: https://gist.github.com/skyscribe/3978082
3.Vim 中{{->跳到首行，}}->跳到尾行
4.How to quickly navigate in the cpp source file

5.Backup configuration file:
.vimrc .gdbinit
6.std::list中的iterator可以取出值，但是可以对其进行赋值操作吗？
可以！
std::list.emplace的作用



Sat Sep 15 09:06:43 CST 2018
1. leetcode's tags: 
Array  				HashTable  			Linked List  			Math  				Two Pointers  		Heap  			
String 				Binary Search  		Divide and Conquer  	Dynamic Programming Backtracking  		Minimax
Stack  				Greedy  			Bit Manipulation  		Tree  				Depth-frist Search 	Breath-first Search  
Union find  		Graph  				Design  				Topological Sort 	Trie  				Binary Indexed Tree  
Segment Tree  		Binary Search Tree  Recursion  				Brainteaser	 		Memoization 		Queue  			 
Reservoir Sampling  Map  				Geometry 	 			Random  			Rejection Sampling	Sort  		

DATA STRUCTURE:
Array  				HashTable  			Linked List  			String 				Stack 				Tree
Graph				Queue				Map 					Union find			Binary Indexed Tree	Binary Search Tree	
Segment Tree
ALGORITHMS:
Binary Search		Greedy				Depth-first Search		Breath-first Search	Recursion			Sort
OTHERS:
Math				Two Pointers		Heap					Divide and Conquer	Dynamic Programming	Backtracking
Minimax				Bit Manipulation	Design					Topological Sort	Trie				Brainteaser
Memoization			Reservoir Sampling	Geometry				Random				Rejection Sampling	

我可以按照上述顺寻刷leetcode。第一步每个数据结构做三个，先做一遍。

2.*p+1 and *(p+1) 如果用p作迭代的话别忘了之后要给p加加，熟练了之后用*p++/*(p++)一步就完成了;
3.how to upload my code to leetcode?
vim register:
	appending to register:	"k+command ex:"kyy		//copy the line of cursor
	using register:			"k+command ex:"kp		//paste content of registe.
	system clipboard:		"+

	appending to register:	"k+command ex:"kyy		//copy the line of cursor

4.shadowsocks of ec2 collapse:	try to connect to remote ec2 by ssh in linux:
	1.use a private key from windows the key is unique, and only with that key can I connect to ec2.4.shadowsocks of ec2 collapse:	try to connect to remote ec2 by ssh in linux.
5. "." in vim, repeat modify as the last change.




















